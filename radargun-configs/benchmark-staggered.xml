<!-- RadarGun 2.2 benchmark -->
<benchmark xmlns="urn:radargun:benchmark:3.0">

    <!-- Specifies where should the master open socket  -->
    <master bindAddress="${master.address:127.0.0.1}" port="${master.port:2103}"/>

    <clusters>
        <cluster size="4"/>
        <cluster size="6"/>
        <cluster size="8"/>
    </clusters>

    <!-- List of configurations of the services -->
    <configurations>
        <config name="NoStagger">
            <setup plugin="infinispan81">
                <vm-args>
                    <properties>
                        <property name="jgroups.tcp.address" value="e${env.HOSTNAME}"/>
                    </properties>
                </vm-args>
                <embedded xmlns="urn:radargun:plugins:infinispan81:3.0" file="dist-sync.xml"/>
            </setup>
        </config>
        <!--<config name="Stagger5">-->
            <!--<setup plugin="infinispan81">-->
                <!--<vm-args>-->
                    <!--<properties>-->
                        <!--<property name="jgroups.tcp.address" value="e${env.HOSTNAME}"/>-->
                        <!--<property name="infinispan.stagger.timeout" value="5"/>-->
                    <!--</properties>-->
                <!--</vm-args>-->
                <!--<embedded xmlns="urn:radargun:plugins:infinispan81:3.0" file="dist-sync.xml"/>-->
            <!--</setup>-->
        <!--</config>-->
        <!--<config name="Stagger20">-->
            <!--<setup plugin="infinispan81">-->
                <!--<vm-args>-->
                    <!--<properties>-->
                        <!--<property name="jgroups.tcp.address" value="e${env.HOSTNAME}"/>-->
                        <!--<property name="infinispan.stagger.timeout" value="20"/>-->
                    <!--</properties>-->
                <!--</vm-args>-->
                <!--<embedded xmlns="urn:radargun:plugins:infinispan81:3.0" file="dist-sync.xml"/>-->
            <!--</setup>-->
        <!--</config>-->
        <!--<config name="Stagger100">-->
            <!--<setup plugin="infinispan81">-->
                <!--<vm-args>-->
                    <!--<properties>-->
                        <!--<property name="jgroups.tcp.address" value="e${env.HOSTNAME}"/>-->
                        <!--<property name="infinispan.stagger.timeout" value="100"/>-->
                    <!--</properties>-->
                <!--</vm-args>-->
                <!--<embedded xmlns="urn:radargun:plugins:infinispan81:3.0" file="dist-sync.xml"/>-->
            <!--</setup>-->
        <!--</config>-->
    </configurations>

    <!-- Sequence of stages executed on the cluster -->
    <rg:scenario xmlns:rg="urn:radargun:benchmark:3.0"
                 xmlns:cache="urn:radargun:stages:cache:3.0"
                 xmlns:l="urn:radargun:stages:legacy:3.0"
                 xmlns="urn:radargun:stages:core:3.0">
        <!-- Start services on all nodes -->
        <service-start />
        <!-- Begin monitoring of CPU, memory usage and GC -->
        <jvm-monitor-start />

        <!-- Preload the cache with data -->
        <cache:load num-entries="${entry.count:10000}"/>

        <l:basic-operations-test test-name="warmup" duration="2m" put-ratio="1" get-ratio="4" num-threads-per-node="10">
            <l:key-selector>
                <l:colliding-keys num-entries="${entry.count:10000}"/>
            </l:key-selector>
        </l:basic-operations-test>

        <l:basic-operations-test test-name="combined" duration="5m"
                                 put-ratio="1" get-ratio="4"
                                 num-threads-per-node="50">
            <l:key-selector>
                <l:colliding-keys num-entries="${entry.count:10000}"/>
            </l:key-selector>
        </l:basic-operations-test>

        <l:basic-operations-test test-name="get-only" duration="5m"
                                 put-ratio="0" get-ratio="1"
                                 num-threads-per-node="50">
            <l:key-selector>
                <l:colliding-keys num-entries="${entry.count:10000}"/>
            </l:key-selector>
        </l:basic-operations-test>


        <!-- Stop JVM monitoring -->
        <jvm-monitor-stop />
        <service-stop/>
    </rg:scenario>
    <!-- Ignore leaked threads as Coherence leaks quite often -->
    <cleanup check-threads="false" />

    <!-- How the statistics are reported -->
    <reports>
        <!-- Produce CSV statistics report -->
        <reporter type="csv" />
        <!-- Produce HTML statistics report -->
        <reporter type="html">
            <html xmlns="urn:radargun:reporters:reporter-default:3.0">
                <target-dir>${env.PWD}/results/html</target-dir>
                <test-report>
                    <separate-cluster-charts>true</separate-cluster-charts>
                </test-report>
            </html>
        </reporter>

        <reporter type="serialized">
            <serialized xmlns="urn:radargun:reporters:reporter-default:3.0">
                <target-dir>${env.PWD}/results/serialized</target-dir>
            </serialized>
        </reporter>
    </reports>

</benchmark>