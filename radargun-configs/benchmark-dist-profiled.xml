<!-- RadarGun 2.2 benchmark -->
<benchmark xmlns="urn:radargun:benchmark:3.0">

    <!-- Specifies where should the master open socket  -->
    <master bindAddress="${master.address:127.0.0.1}" port="${master.port:2103}"/>

    <clusters>
        <cluster size="4"/>
    </clusters>

    <!-- List of configurations of the services -->
    <configurations>
        <config name="TCP">
            <setup plugin="infinispan90">
                <vm-args>
                    <!--<flight-recorder enabled="true" filename="tcp-${env.HOSTNAME}.jfr" settings="profile"/>-->
                    <properties>
                        <property name="jgroups.config" value="custom-jgroups-udp.xml" />
                    </properties>
                </vm-args>
                <embedded xmlns="urn:radargun:plugins:infinispan90:3.0" file="dist-sync.xml"/>
            </setup>
        </config>
    </configurations>

    <!-- Sequence of stages executed on the cluster -->
    <rg:scenario xmlns:rg="urn:radargun:benchmark:3.0"
                 xmlns:cache="urn:radargun:stages:cache:3.0"
                 xmlns="urn:radargun:stages:core:3.0">
        <!-- Start services on all nodes -->
        <service-start />
        <!-- Begin monitoring of CPU, memory usage and GC -->
        <jvm-monitor-start />

        <!-- Preload the cache with data -->
        <cache:load num-entries="${entry.count:10000}"/>

        <cache:basic-operations-test test-name="warmup" duration="1m" num-threads-per-node="10">
            <statistics>
                <common/>
            </statistics>
            <cache:key-selector>
                <cache:concurrent-keys total-entries="${entry.count:10000}"/>
            </cache:key-selector>
        </cache:basic-operations-test>

        <command cmd="/home/rvansa/workspace/async-profiler/profiler.sh" args="-p ${process.id} -a start" />
        <cache:basic-operations-test test-name="test" duration="1m" num-threads-per-node="10">
            <statistics>
                <common/>
            </statistics>
            <cache:key-selector>
                <cache:concurrent-keys total-entries="${entry.count:10000}"/>
            </cache:key-selector>
        </cache:basic-operations-test>
        <command cmd="/home/rvansa/workspace/async-profiler/profiler.sh" args="-p ${process.id} -f /tmp/tq${slave.index}.txt -a dump" />

        <!-- Stop JVM monitoring -->
        <jvm-monitor-stop />
        <service-stop/>
    </rg:scenario>
    <!-- Ignore leaked threads as Coherence leaks quite often -->
    <cleanup check-threads="false" />

    <!-- How the statistics are reported -->
    <reports>
        <!-- Produce HTML statistics report -->
        <reporter type="html">
            <html xmlns="urn:radargun:reporters:reporter-default:3.0">
                <target-dir>${env.PWD}/results/html</target-dir>
                <test-report>
                    <separate-cluster-charts>true</separate-cluster-charts>
                </test-report>
            </html>
        </reporter>

        <reporter type="serialized">
            <serialized xmlns="urn:radargun:reporters:reporter-default:3.0">
                <target-dir>${env.PWD}/results/serialized</target-dir>
            </serialized>
        </reporter>
    </reports>

</benchmark>